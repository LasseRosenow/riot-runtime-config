<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="903px" height="803px" viewBox="-0.5 -0.5 903 803"><defs/><g><rect x="0" y="0" width="900" height="800" fill="#ffffff" stroke="none" pointer-events="all"/><path d="M 0 0 L 90 0 L 90 15 L 80 30 L 0 30 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 90 0 L 900 0 L 900 800 L 0 800 L 0 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 7px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">registry api</div></div></div></foreignObject><text x="45" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">registry api</text></switch></g><rect x="20" y="520" width="490" height="260" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 492px; height: 260px; padding-top: 520px; margin-left: 20px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 490px; height: 260px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry base</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">+ registry_init()</p><p style="margin: 0px ; margin-left: 4px">+ registry_register_schema(registry_schema_t *schema)</p><p style="margin: 0px ; margin-left: 4px">+ registry_add_instance(int schema_id, registry_instance_t *instance)</p><p style="margin: 0px ; margin-left: 4px">+ registry_set_value(const int *path, int path_len, const void *val, int val_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_value(const int *path, int path_len, registry_value_t *value)</p><p style="margin: 0px ; margin-left: 4px">+ registry_commit(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ <span>registry_export(int (*export_func)(const int *path, int path_len,</span><br /></p><p style="margin: 0px ; margin-left: 4px">    const registry_schema_t *schema,</p><p style="margin: 0px ; margin-left: 4px">    const registry_instance_t *instance,</p><p style="margin: 0px ; margin-left: 4px">    const registry_schema_item_t *meta,</p><p style="margin: 0px ; margin-left: 4px">    const registry_value_t *value,</p><p style="margin: 0px ; margin-left: 4px">    void *context</p><p style="margin: 0px ; margin-left: 4px">  ), const int *path, int path_len, int recursion_depth, void *context);</p></div></div></div></foreignObject><text x="20" y="532" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="497.5" y="40" width="380" height="170" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 382px; height: 170px; padding-top: 40px; margin-left: 498px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 380px; height: 170px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry store</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">+ registry_store_init(void)<br /></p><p style="margin: 0px ; margin-left: 4px">+ registry_store_register_src(registry_store_t *src)<br /></p><p style="margin: 0px ; margin-left: 4px">+ registry_store_register_dst(registry_store_t *dst)<br /></p><p style="margin: 0px ; margin-left: 4px">+ registry_store_load(void)<br /></p><p style="margin: 0px 0px 0px 4px">+ registry_store_save(void)</p><p style="margin: 0px 0px 0px 4px">+ registry_store_save_one(const int *path, int path_len, void *context)</p></div></div></div></foreignObject><text x="498" y="52" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="640" y="620" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 650px; margin-left: 641px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>registry</b></div></div></div></foreignObject><text x="700" y="654" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">registry</text></switch></g><path d="M 640 650 L 524.12 650" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 511.12 650 L 524.12 643.5 L 524.12 656.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 687.99 620 L 687.99 509.99 L 687.99 224.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 687.99 211.12 L 694.49 224.12 L 681.49 224.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="25" y="40" width="395" height="440" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 397px; height: 440px; padding-top: 40px; margin-left: 25px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 395px; height: 440px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry get / set convenience functions</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px 0px 0px 4px">+ registry_set_string(const int *path, int path_len, const char *val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_bool(const int *path, int path_len, bool val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_uint8(const int *path, int path_len, uint8_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_uint16(const int *path, int path_len, uint16_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_uint32(const int *path, int path_len, uint32_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_uint64(const int *path, int path_len, uint64_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_int8(const int *path, int path_len, int8_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_int16(const int *path, int path_len, int16_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_int32(const int *path, int path_len, int32_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_int64(const int *path, int path_len, int64_t val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_float32(const int *path, int path_len, float val)</p><p style="margin: 0px 0px 0px 4px">+ registry_set_float64(const int *path, int path_len, double val)</p><p style="margin: 0px ; margin-left: 4px"><br /></p><p style="margin: 0px ; margin-left: 4px">+ registry_get_string(const int *path, int path_len, char *buf, int buf_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_bool(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_uint8(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_uint16(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_uint32(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_uint64(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_int8(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_int16(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_int32(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_int64(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_float32(const int *path, int path_len)</p><p style="margin: 0px ; margin-left: 4px">+ registry_get_float64(const int *path, int path_len)</p></div></div></div></foreignObject><text x="25" y="52" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><path d="M 260 520 L 260 509.99 L 260 494.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 260 481.12 L 266.5 494.12 L 253.5 494.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="480" y="270" width="170" height="100" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 172px; height: 100px; padding-top: 270px; margin-left: 480px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 170px; height: 100px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry schemas</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">+ registry_schemas_init(void)</p></div></div></div></foreignObject><text x="480" y="282" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><path d="M 687.99 620 L 687.99 519.99 L 564.99 519.99 L 564.99 384.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 564.99 371.12 L 571.49 384.12 L 558.49 384.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>