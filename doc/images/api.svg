<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1023px" height="863px" viewBox="-0.5 -0.5 1023 863"><defs/><g><rect x="0" y="0" width="1020" height="860" fill="#ffffff" stroke="none" pointer-events="all"/><path d="M 0 0 L 90 0 L 90 15 L 80 30 L 0 30 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 90 0 L 1020 0 L 1020 860 L 0 860 L 0 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 7px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">registry api</div></div></div></foreignObject><text x="45" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">registry api</text></switch></g><rect x="25" y="530" width="620" height="300" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 622px; height: 300px; padding-top: 530px; margin-left: 25px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 620px; height: 300px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry base</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">void registry_init(void);</p><p style="margin: 0px ; margin-left: 4px">int registry_register_schema(registry_root_group_id_t root_group_id, registry_schema_t *schema);</p><p style="margin: 0px ; margin-left: 4px">int registry_register_schema_instance(registry_root_group_id_t root_group_id, int schema_id, registry_instance_t *instance);</p><p style="margin: 0px ; margin-left: 4px">int registry_set_value(const registry_path_t path, const void *val, int val_len);</p><p style="margin: 0px ; margin-left: 4px">registry_value_t *registry_get_value(const registry_path_t path, registry_value_t *value);</p><p style="margin: 0px ; margin-left: 4px">int registry_commit(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">int registry_export(int (*export_func)(</p><p style="margin: 0px ; margin-left: 4px">    const registry_path_t path,</p><p style="margin: 0px ; margin-left: 4px">    const registry_schema_t *schema,</p><p style="margin: 0px ; margin-left: 4px">    const registry_instance_t *instance,</p><p style="margin: 0px ; margin-left: 4px">    const registry_schema_item_t *meta,</p><p style="margin: 0px ; margin-left: 4px">    const registry_value_t *value,</p><p style="margin: 0px ; margin-left: 4px">    void *context</p><p style="margin: 0px ; margin-left: 4px">  ),</p><p style="margin: 0px ; margin-left: 4px">  const registry_path_t path, int recursion_depth, void *context</p><p style="margin: 0px ; margin-left: 4px">);</p></div></div></div></foreignObject><text x="25" y="542" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="607.5" y="50" width="380" height="170" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 382px; height: 170px; padding-top: 50px; margin-left: 608px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 380px; height: 170px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry store</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">void registry_init_store(void);</p><p style="margin: 0px ; margin-left: 4px">void registry_register_store_src(registry_store_t *src);</p><p style="margin: 0px ; margin-left: 4px">void registry_register_store_dst(registry_store_t *dst);</p><p style="margin: 0px ; margin-left: 4px">int registry_load(void);</p><p style="margin: 0px ; margin-left: 4px">int registry_save(void);</p><p style="margin: 0px ; margin-left: 4px">int registry_save_one(const registry_path_t path, void *context);</p></div></div></div></foreignObject><text x="608" y="62" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="750" y="650" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 680px; margin-left: 751px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>registry</b></div></div></div></foreignObject><text x="810" y="684" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">registry</text></switch></g><path d="M 750 680 L 659.12 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 646.12 680 L 659.12 673.5 L 659.12 686.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 797.99 650 L 797.99 519.99 L 797.99 234.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 797.99 221.12 L 804.49 234.12 L 791.49 234.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="25" y="40" width="395" height="440" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 397px; height: 440px; padding-top: 40px; margin-left: 25px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 395px; height: 440px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry get / set convenience functions</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px 0px 0px 4px"><span>int registry_set_string(const registry_path_t path, const char *val);</span><br /></p><p style="margin: 0px 0px 0px 4px">int registry_set_bool(const registry_path_t path, bool val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_uint8(const registry_path_t path, uint8_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_uint16(const registry_path_t path, uint16_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_uint32(const registry_path_t path, uint32_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_uint64(const registry_path_t path, uint64_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_int8(const registry_path_t path, int8_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_int16(const registry_path_t path, int16_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_int32(const registry_path_t path, int32_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_int64(const registry_path_t path, int64_t val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_float32(const registry_path_t path, float val);</p><p style="margin: 0px 0px 0px 4px">int registry_set_float64(const registry_path_t path, double val);</p><p style="margin: 0px 0px 0px 4px"><br /></p><p style="margin: 0px ; margin-left: 4px">char *registry_get_string(const registry_path_t path, char *buf, int buf_len);</p><p style="margin: 0px ; margin-left: 4px">bool registry_get_bool(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">uint8_t registry_get_uint8(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">uint16_t registry_get_uint16(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">uint32_t registry_get_uint32(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">uint64_t registry_get_uint64(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">int8_t registry_get_int8(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">int16_t registry_get_int16(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">int32_t registry_get_int32(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">int64_t registry_get_int64(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">float registry_get_float32(const registry_path_t path);</p><p style="margin: 0px ; margin-left: 4px">double registry_get_float64(const registry_path_t path);</p></div></div></div></foreignObject><text x="25" y="52" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><path d="M 260 530 L 260 509.99 L 260 494.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 260 481.12 L 266.5 494.12 L 253.5 494.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="580" y="280" width="190" height="100" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 192px; height: 100px; padding-top: 280px; margin-left: 580px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 190px; height: 100px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>registry schemas</b><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px"><br /></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">void registry_schemas_init(void);</p></div></div></div></foreignObject><text x="580" y="292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;interface&gt;&gt;...</text></switch></g><path d="M 797.99 650 L 797.99 450 L 674.99 450 L 674.99 394.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 674.99 381.12 L 681.49 394.12 L 668.49 394.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>