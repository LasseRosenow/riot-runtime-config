<mxfile host="65bd71144e">
    <diagram id="fjN8D4Odn0497USpxgly" name="Page-1">
        <mxGraphModel dx="1015" dy="1609" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" background="#FFFFFF" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="161" value="registry api" style="shape=umlFrame;whiteSpace=wrap;html=1;verticalAlign=top;width=90;height=30;swimlaneFillColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="20" y="-800" width="900" height="770" as="geometry"/>
                </mxCell>
                <mxCell id="113" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;registry base&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_init()&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_register_schema(registry_schema_t *schema)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_add_instance(int schema_id, registry_instance_t *instance)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_set_value(const int *path, int path_len, const void *val, int val_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_get_value(const int *path, int path_len, registry_value_t *value)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_commit(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;&lt;span&gt;registry_export(int (*export_func)(&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const int *path, int path_len, registry_schema_item_t *meta,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const registry_value_t *value,&amp;nbsp;&lt;/span&gt;&lt;span&gt;void *context&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;), const int *path, int path_len, int recursion_depth)&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
                    <mxGeometry x="40" y="-280" width="480" height="220" as="geometry"/>
                </mxCell>
                <mxCell id="117" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;registry store&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_store_init(void)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_store_register_src(registry_store_t *src)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_store_register_dst(registry_store_t *dst)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_store_load(void)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+ registry_store_save(void)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+ registry_store_save_one(const int *path, int path_len, void *context)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
                    <mxGeometry x="517.5" y="-760" width="380" height="170" as="geometry"/>
                </mxCell>
                <mxCell id="162" value="&lt;b&gt;registry&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="647.5" y="-200" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="163" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;edgeStyle=orthogonalEdgeStyle;rounded=0;" parent="1" source="162" target="113" edge="1">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="370" y="-410" as="sourcePoint"/>
                        <mxPoint x="530" y="-410" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="164" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;edgeStyle=orthogonalEdgeStyle;rounded=0;" parent="1" source="162" target="117" edge="1">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="470" y="-350" as="sourcePoint"/>
                        <mxPoint x="295" y="-530" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="708" y="-290"/>
                            <mxPoint x="708" y="-290"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="165" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;registry get / set convenience functions&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_string(const int *path, int path_len, const char *val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_bool(const int *path, int path_len, bool val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_uint8(const int *path, int path_len, uint8_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_uint16(const int *path, int path_len, uint16_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_uint32(const int *path, int path_len, uint32_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_uint64(const int *path, int path_len, uint64_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_int8(const int *path, int path_len, int8_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_int16(const int *path, int path_len, int16_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_int32(const int *path, int path_len, int32_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_int64(const int *path, int path_len, int64_t val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_float32(const int *path, int path_len, float val)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;registry_set_float64(const int *path, int path_len, double val)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_string(const int *path, int path_len, char *buf, int buf_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_bool(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_uint8(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_uint16(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_uint32(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_uint64(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_int8(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_int16(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_int32(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_int64(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_float32(const int *path, int path_len)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;registry_get_float64(const int *path, int path_len)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
                    <mxGeometry x="45" y="-760" width="395" height="440" as="geometry"/>
                </mxCell>
                <mxCell id="166" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;edgeStyle=orthogonalEdgeStyle;rounded=0;" parent="1" source="113" target="165" edge="1">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="760.0000000000002" y="-155" as="sourcePoint"/>
                        <mxPoint x="560" y="-155" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="280" y="-290"/>
                            <mxPoint x="280" y="-290"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="167" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;registry schemas&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ registry_schemas_init(void)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
                    <mxGeometry x="500" y="-530" width="170" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="168" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;edgeStyle=orthogonalEdgeStyle;rounded=0;" parent="1" source="162" target="167" edge="1">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="717.5" y="-190" as="sourcePoint"/>
                        <mxPoint x="717.5" y="-580" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="708" y="-280"/>
                            <mxPoint x="585" y="-280"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>